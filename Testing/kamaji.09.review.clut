#----------------------------------------------------------------------------------------------------------------------
#
#  kamaji.09.review.clut
#
#  20190901 BGH; created.
#
#----------------------------------------------------------------------------------------------------------------------
#
#  Copyright (c) 2019 Brian G. Holmes
#
#	This program is part of the Holmespun Testing Support repository.
#
#	The Holmespun Testing Support repository only contains free software: you can redistribute it and/or modify it
#	under the terms of the GNU General Public License as published by the Free Software Foundation, either version
#	three (3) of the License, or (at your option) any later version.
#
#	The Holmespun Testing Support repository is distributed in the hope that it will be useful, but WITHOUT ANY
#	WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
#	General Public License for more details.
#
#	You should have received a copy of the GNU General Public License along with this file. If not, see
#       <https://www.gnu.org/licenses/>.
#
#  See the COPYING.text file for further information.
#
#----------------------------------------------------------------------------------------------------------------------

set -u

source $(dirname ${BASH_SOURCE[0]})/kamaji.00.common_functions.bash

export HOLMESPUN_MONOCHROMATIC=ACTIVE

#----------------------------------------------------------------------------------------------------------------------

function testCaseDefinitions() {
  #
  clut_shared_initialize        "export KAMAJI_CONFIG_LIST=./.kamaji.conf"
  #
  clut_global_dump_format	GAMMA_exercise dump_an_elf_file
  #
  clut_global_initialize	mkdir --parents Testing
  clut_global_initialize	spit .kamaji.conf "baseline-folder Testing"
  clut_global_initialize	spit .kamaji.conf "time-output-format %C %x"
  clut_global_initialize	spit .kamaji.conf "verbosity-level heavy"
  #
  clut_case_name		Review_New
  clut_case_initialize		create_exercise_script_alpha Testing/BETA_exercise.bash
  clut_case_initialize		spit .kamaji.conf "new-review-command cat --number --show-ends"
  clut_case_parameter		review
  clut_case_end
  #
  clut_case_name		Review_Match
  clut_case_initialize		create_exercise_script_alpha Testing/BETA_exercise.bash
  clut_case_initialize		spit Testing/BETA_exercise.output "TC1: Good news, everyone!"
  clut_case_initialize		spit Testing/BETA_exercise.output "TC2: I miss Morbo."
  clut_case_parameter		review
  clut_case_end
  #
  clut_case_name		Review_Short
  clut_case_initialize		create_exercise_script_alpha Testing/BETA_exercise.bash
  clut_case_initialize		spit .kamaji.conf "short-review-command diff --side-by-side --width=74"
  clut_case_initialize		spit Testing/BETA_exercise.output "TC1: Good news, everyone!"
  clut_case_initialize		spit Testing/BETA_exercise.output "TC2: You miss Morbo."
  clut_case_parameter		review
  clut_case_end
  #
  clut_case_name		Review_Long
  clut_case_initialize		create_exercise_script_alpha Testing/BETA_exercise.bash
  clut_case_initialize		spit .kamaji.conf "long-review-line-count 2"
  clut_case_initialize		spit .kamaji.conf "long-review-command diff"
  clut_case_initialize		spit Testing/BETA_exercise.output "TC1: Good news, everyone!"
  clut_case_initialize		spit Testing/BETA_exercise.output "TC2: You miss Morbo."
  clut_case_parameter		review
  clut_case_end
  #
  clut_shared_initialize	create_production_script_alpha ALPHA.bash
  clut_shared_initialize	create_production_script_alpha_clut Testing/ALPHA.clut
  clut_shared_initialize	create_exercise_script_alpha Testing/BETA_exercise.bash
  clut_shared_initialize	create_exercise_compilable_alpha Testing/GAMMA_exercise.cpp
  #
  clut_case_name		Review_all_together_now
  clut_case_initialize		spit .kamaji.conf "new-review-command wc"
  clut_case_initialize		spit .kamaji.conf "short-review-command diff --side-by-side --width=74"
  clut_case_initialize		spit .kamaji.conf "long-review-line-count 5"
  clut_case_initialize		spit .kamaji.conf "long-review-command diff"
  clut_case_initialize		spit Testing/BETA_exercise.output "TC1: Good news, everyone!"
  clut_case_initialize		spit Testing/BETA_exercise.output "TC2: You miss Morbo."
  clut_case_initialize		spit Testing/GAMMA_exercise.output "TC1: Apple"
  clut_case_initialize		spit Testing/GAMMA_exercise.output "TC2: Banana"
  clut_case_parameter		review
  clut_case_end
}

#----------------------------------------------------------------------------------------------------------------------

clut_definition_set		testCaseDefinitions

#----------------------------------------------------------------------------------------------------------------------
