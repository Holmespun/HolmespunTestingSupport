#----------------------------------------------------------------------------------------------------------------------
#
#  kamaji.bash.clut
#
#  Copyright 2019 Brian G. Holmes
#
#	This program is part of the Holmespun Makefile Method.
#
#	The Holmespun Makefile Method is free software: you can redistribute it and/or modify it under the terms of the
#	GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or
#	(at your option) any later version.
#
#	The Holmespun Makefile Method is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
#	without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General
#	Public License for more details.
#
#	You should have received a copy of the GNU General Public License along with this program.  If not, see
#	<https://www.gnu.org/licenses/>.
#
#  See the COPYING.text file for further information.
#
#  20190707 BGH; created.
#
#----------------------------------------------------------------------------------------------------------------------

set -u

source $(whereHolmespunLibraryBashing)/Library/spit_spite_spitn_and_spew.bash

#----------------------------------------------------------------------------------------------------------------------

function create_program_clut() {
  #
  local ClutFSpec=${1}
  #
  spit ${ClutFSpec} "#!/bin/bash"
  spit ${ClutFSpec} "#"
  spit ${ClutFSpec} "#  ${ClutFSpec} created by ${FUNCNAME}."
  spit ${ClutFSpec} "#"
  spit ${ClutFSpec} "function testCollection() {"
  spit ${ClutFSpec} "  #"
  spit ${ClutFSpec} "  clut_case_name		NoArguments"
  spit ${ClutFSpec} "  clut_case_comment	\"This is the most trivial test case.\""
  spit ${ClutFSpec} "  clut_case_end"
  spit ${ClutFSpec} "  #"
  spit ${ClutFSpec} "}"
  spit ${ClutFSpec} "#"
  spit ${ClutFSpec} "clut_definition_set	testCollection"
  spit ${ClutFSpec} "#"
  #
}

#----------------------------------------------------------------------------------------------------------------------

function create_program_script() {
  #
  local ScriptFSpec=${1}
  #
  spit ${ScriptFSpec} "#!/bin/bash"
  spit ${ScriptFSpec} "#"
  spit ${ScriptFSpec} "#  ${ScriptFSpec} created by ${FUNCNAME}."
  spit ${ScriptFSpec} "#"
  spit ${ScriptFSpec} "echo \"I am the greetest! Now I am leaving Earth for no raisin!\""
  spit ${ScriptFSpec} "#"
  #
  chmod 755 ${ScriptFSpec}
  #
}

#======================================================================================================================

function testsForUsage() {
  #
  clut_case_name		NoArguments
  clut_case_comment		"General usage should be displayed."
  clut_case_end
  #
  clut_case_name		Usage
  clut_case_comment		"General usage should be displayed."
  clut_case_parameter		usage
  clut_case_end
  #
  clut_case_name		Help
  clut_case_comment		"General usage should be displayed."
  clut_case_parameter		help
  clut_case_end
  #
  clut_case_name		Bobo
  clut_case_comment		"General usage should be displayed."
  clut_case_comment		"The working directory will also be created because a command was issued."
  clut_case_parameter		bobo
  clut_case_end
  #
  for Command in compile invoke grade mask configure
  do
    #
    clut_case_name		Help_${Command}
    clut_case_parameter		help ${Command}
    clut_case_end
    #
  done
  #
}

#----------------------------------------------------------------------------------------------------------------------

function testsForCompile() {
  #
  clut_case_name		ClutFromClut_Compile
  clut_case_initialize		mkdir Testing
  clut_case_initialize		create_program_script PROGRAM.bash
  clut_case_initialize		create_program_clut   Testing/PROGRAM.bash.clut
  clut_case_parameter		verbose verbose
  clut_case_parameter		compile Testing/PROGRAM.bash.clut
  clut_case_end
  #
  clut_case_name		ClutFromClutBash_Compile
  clut_case_comment		"Although the CLUT has already been compiled, and that output is up-to-date,"	\
				"the CLUT will be compiled again because the user specifically requested it."
  clut_case_initialize		mkdir Testing
  clut_case_initialize		create_program_script PROGRAM.bash
  clut_case_initialize		create_program_clut   Testing/PROGRAM.bash.clut
  clut_case_initialize		kamaji.bash compile Testing/PROGRAM.bash.clut
  clut_case_parameter		verbose verbose
  clut_case_parameter		compile Testing/PROGRAM.bash.clut
  clut_case_end
  #
  clut_case_name		ExecutableScript_Compile
  clut_case_comment		"A executable script need not be compiled."
  clut_case_initialize		create_program_script PROGRAM.bash
  clut_case_parameter		verbose verbose
  clut_case_parameter		comp PROGRAM.bash
  clut_case_end
  #
  clut_case_name		ExecutableScriptOutput_Compile
  clut_case_comment		"An output file cannot be compiled, and the script that it is based need not be."
  clut_case_initialize		create_program_script PROGRAM.bash
  clut_case_parameter		verbose verbose
  clut_case_parameter		comp PROGRAM.bash.output
  clut_case_end
  #
}

#----------------------------------------------------------------------------------------------------------------------

function testsForExecute() {
  #
  clut_case_name		ClutFromClut_Execute
  clut_case_initialize		mkdir Testing
  clut_case_initialize		create_program_script PROGRAM.bash
  clut_case_initialize		create_program_clut   Testing/PROGRAM.bash.clut
  clut_case_parameter		verbose verbose
  clut_case_parameter		execute Testing/PROGRAM.bash.clut
  clut_case_end
  #
  clut_case_name		ClutFromClutExecute_Execute
  clut_case_comment		"Although the CLUT output has aready been generate, and it is up-to-date,"	\
				"it will be generated again because the user specifically requested it."
  clut_case_initialize		mkdir Testing
  clut_case_initialize		create_program_script PROGRAM.bash
  clut_case_initialize		create_program_clut   Testing/PROGRAM.bash.clut
  clut_case_initialize		kamaji.bash invoke Testing/PROGRAM.bash.clut
  clut_case_parameter		verbose verbose
  clut_case_parameter		execute Testing/PROGRAM.bash.clut
  clut_case_end
  #
  clut_case_name		ExecutableScript_Execute
  clut_case_comment		"A executable script can be invoked to create an output file."
  clut_case_initialize		create_program_script PROGRAM.bash
  clut_case_parameter		verbose verbose
  clut_case_parameter		exec PROGRAM.bash
  clut_case_end
  #
  clut_case_name		ExecutableBashOutput_Execute
  clut_case_comment		"An output file cannot be invoked."
  clut_case_initialize		create_program_script PROGRAM.bash
  clut_case_parameter		verbose verbose
  clut_case_parameter		invo PROGRAM.bash.output
  clut_case_end
  #
}

#----------------------------------------------------------------------------------------------------------------------

clut_definition_set		testsForUsage
clut_definition_set		testsForCompile
clut_definition_set		testsForExecute

#----------------------------------------------------------------------------------------------------------------------
